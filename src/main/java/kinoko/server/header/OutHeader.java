package kinoko.server.header;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public enum OutHeader {
    BEGIN_SOCKET,
    CheckPasswordResult,
    GuestIDLoginResult,
    AccountInfoResult,
    CheckUserLimitResult,
    SetAccountResult,
    ConfirmEULAResult,
    CheckPinCodeResult,
    UpdatePinCodeResult,
    ViewAllCharResult,
    SelectCharacterByVACResult,
    WorldInformation,
    SelectWorldResult,
    SelectCharacterResult,
    CheckDuplicatedIDResult,
    CreateNewCharacterResult,
    DeleteCharacterResult,
    MigrateCommand,
    AliveReq,
    AuthenCodeChanged,
    AuthenMessage,
    SecurityPacket,
    EnableSPWResult,
    DeleteCharacterOTPRequest,
    CheckCrcResult,
    LatestConnectedWorld,
    RecommendWorldMessage,
    CheckExtraCharInfoResult,
    Unk_28,
    CheckSPWResult,
    // END_SOCKET,
    // BEGIN_CHARACTERDATA,
    InventoryOperation,
    InventoryGrow,
    StatChanged,
    TemporaryStatSet,
    TemporaryStatReset,
    ForcedStatSet,
    ForcedStatReset,
    ChangeSkillRecordResult,
    SkillUseResult,
    Unk_39,
    GivePopularityResult,
    Message,
    SendOpenFullClientLink,
    MemoResult,
    MapTransferResult,
    AntiMacroResult,
    InitialQuizStart,
    ClaimResult,
    SetClaimSvrAvailableTime,
    ClaimSvrStatusChanged,
    SetTamingMobInfo,
    QuestClear,
    EntrustedShopCheckResult,
    SkillLearnItemResult,
    SkillResetItemResult,
    GatherItemResult,
    SortItemResult,
    RemoteShopOpenResult,
    SueCharacterResult,
    MigrateToCashShopResult,
    TradeMoneyLimit,
    SetGender,
    GuildBBS,
    PetDeadMessage,
    CharacterInfo,
    PartyResult,
    Unk_66,
    ExpeditionRequest,
    ExpeditionNoti,
    FriendResult,
    GuildRequest,
    GuildResult,
    AllianceResult,
    TownPortal,
    OpenGate,
    BroadcastMsg,
    IncubatorResult,
    ShopScannerResult,
    ShopLinkResult,
    MarriageRequest,
    MarriageResult,
    WeddingGiftResult,
    MarriedPartnerMapTransfer,
    CashPetFoodResult,
    SetWeekEventMessage,
    SetPotionDiscountRate,
    BridleMobCatchFail,
    ImitatedNPCResult,
    ImitatedNPCData,
    LimitedNPCDisableInfo,
    MonsterBookSetCard,
    MonsterBookSetCover,
    Unk_92,
    Unk_93,
    Unk_94,
    Unk_95,
    Unk_96,
    HourChanged,
    MiniMapOnOff,
    ConsultAuthkeyUpdate,
    ClassCompetitionAuthkeyUpdate,
    WebBoardAuthkeyUpdate,
    SessionValue,
    PartyValue,
    FieldSetVariable,
    BonusExpRateChanged,
    PotionDiscountRateChanged,
    FamilyChartResult,
    FamilyInfoResult,
    FamilyResult,
    FamilyJoinRequest,
    FamilyJoinRequestResult,
    FamilyJoinAccepted,
    FamilyPrivilegeList,
    FamilyFamousPointIncResult,
    FamilyNotifyLoginOrLogout,
    FamilySetPrivilege,
    FamilySummonRequest,
    NotifyLevelUp,
    NotifyWedding,
    NotifyJobChange,
    IncRateChanged,
    MapleTVUseRes,
    AvatarMegaphoneRes,
    AvatarMegaphoneUpdateMessage,
    AvatarMegaphoneClearMessage,
    CancelNameChangeResult,
    CancelTransferWorldResult,
    DestroyShopResult,
    FAKEGMNOTICE,
    SuccessInUseGachaponBox,
    NewYearCardRes,
    RandomMorphRes,
    CancelNameChangeByOther,
    SetBuyEquipExt,
    SetPassenserRequest,
    ScriptProgressMessage,
    Unk_140,
    Unk_141,
    DataCRCCheckFailed,
    CakePieEventResult,
    UpdateGMBoard,
    ShowSlotMessage,
    WildHunterInfo,
    AccountMoreInfo,
    FindFirend,
    StageChange,
    DragonBallBox,
    AskUserWhetherUsePamsSong,
    TransferChannel,
    DisallowedDeliveryQuestList,
    OpenUICreatePremiumAdventurer,
    FieldSetEnterSuccessed,
    Unk_153,
    Unk_154,
    Unk_155,
    Unk_156,
    MacroSysDataInit,
    // END_CHARACTERDATA,
    // BEGIN_STAGE,
    SetField,
    SetITC,
    SetCashShop,
    // END_STAGE,
    // BEGIN_MAP,
    SetBackgroundEffect,
    SetMapObjectVisible,
    ClearBackgroundEffect,
    // END_MAP,
    // BEGIN_FIELD,
    TransferFieldReqIgnored,
    TransferChannelReqIgnored,
    TransferPvpReqIgnored,
    FieldSpecificData,
    GroupMessage,
    Whisper,
    CoupleMessage,
    MobSummonItemUseResult,
    FieldEffect,
    FieldObstacleOnOff,
    FieldObstacleOnOffStatus,
    FieldObstacleAllReset,
    BlowWeather,
    PlayJukeBox,
    AdminResult,
    Quiz,
    Desc,
    Clock,
    CONTIMOVE,
    CONTISTATE,
    SetQuestClear,
    SetQuestTime,
    Warn,
    SetObjectState,
    DestroyClock,
    ShowArenaResult,
    StalkResult,
    MassacreIncGauge,
    MassacreResult,
    QuickslotMappedInit,
    FootHoldInfo,
    RequestFootHoldInfo,
    FieldKillCount,
    Unk_197,
    Unk_198,
    // BEGIN_USERPOOL,
    UserEnterField,
    UserLeaveField,
    // BEGIN_USERCOMMON,
    UserChat,
    UserChatNLCPQ,
    UserADBoard,
    UserMiniRoomBalloon,
    UserConsumeItemEffect,
    UserItemUpgradeEffect,
    UserItemHyperUpgradeEffect,
    UserItemOptionUpgradeEffect,
    UserItemReleaseEffect,
    UserItemUnreleaseEffect,
    UserHitByUser,
    UserDotByUser,
    UserDamageByUser,
    UserTeslaTriangle,
    UserFollowCharacter,
    UserShowPQReward,
    UserSetOneTimeAction,
    UserMakingSkillResult,
    UserGatherResult,
    UserExplode,
    UserHitByCounter,
    UserSetPhase,
    SetPortalUsable,
    ShowPamsSongResult,
    // BEGIN_PET,
    PetActivated,
    PetEvol,
    PetTransferField,
    PetMove,
    PetAction,
    PetNameChanged,
    PetLoadExceptionList,
    PetActionCommand,
    // END_PET,
    // BEGIN_DRAGON,
    DragonEnterField,
    DragonMove,
    DragonLeaveField,
    // END_DRAGON,
    // BEGIN_ANDROID
    AndroidEnterField,
    AndroidMove,
    AndroidActionSet,
    AndroidModified,
    AndroidLeaveField,
    // END_ANDROID,
    END_USERCOMMON,
    // BEGIN_USERREMOTE,
    UserMove,
    Unk_243,
    UserMeleeAttack,
    UserShootAttack,
    UserMagicAttack,
    UserBodyAttack,
    UserSkillPrepare,
    UserMovingShootAttackPrepare,
    UserSkillCancel,
    UserHit,
    UserEmotion,
    AndroidEmotion,
    UserSetActiveEffectItem,
    UserShowUpgradeTombEffect,
    UserSetActivePortableChair,
    UserAvatarModified,
    UserEffectRemote,
    UserTemporaryStatSet,
    UserTemporaryStatReset,
    UserHP,
    UserGuildNameChanged,
    UserGuildMarkChanged,
    UserPvpTeamChanged,
    GatherActionSet,
    UpdatePvPHPTag,
    UserThrowGrenade,
    // END_USERREMOTE,
    // BEGIN_USERLOCAL,
    UserSitResult,
    UserEmotionLocal,
    AndroidEmotionLocal,
    UserEffectLocal,
    UserTeleport,
    Premium,
    MesoGive_Succeeded,
    MesoGive_Failed,
    Random_Mesobag_Succeed,
    Random_Mesobag_Failed,
    FieldFadeInOut,
    FieldFadeOutForce,
    UserQuestResult,
    NotifyHPDecByField,
    UserPetSkillChanged,
    UserBalloonMsg,
    PlayEventSound,
    PlayMinigameSound,
    UserMakerResult,
    UserOpenConsultBoard,
    UserOpenClassCompetitionPage,
    UserOpenUI,
    UserOpenUIWithOption,
    SetDirectionMode,
    SetStandAloneMode,
    UserHireTutor,
    UserTutorMsg,
    IncCombo,
    IncComboByComboRecharge,
    UserRandomEmotion,
    ResignQuestReturn,
    PassMateName,
    SetRadioSchedule,
    UserOpenSkillGuide,
    UserNoticeMsg,
    UserChatMsg,
    UserSetUtilDlg,
    UserBuffzoneEffect,
    UserGoToCommoditySN,
    UserDamageMeter,
    UserTimeBombAttack,
    UserPassiveMove,
    UserFollowCharacterFailed,
    UserRequestVengeance,
    UserRequestExJablin,
    UserAskAPSPEvent,
    QuestGuideResult,
    UserDeliveryQuest,
    Unk_316,
    Unk_317,
    Unk_318,
    Unk_319,
    Unk_320,
    CreateNewCharacterResult_PremiumAdventurer,
    GatherRequestResult,
    Unk_323, // CUIMiniMap::ShowPortalToolTip
    UserBagItemUseResult,
    Unk_325,
    Unk_326,
    Unk_327,
    SkillCooltimeSet,
    // END_USERLOCAL,
    END_USERPOOL,
    // BEGIN_SUMMONED,
    SummonedEnterField,
    SummonedLeaveField,
    SummonedMove,
    SummonedAttack,
    SummonedAttackPvP,
    SummonedSkill,
    SummonedSkillPvP,
    SummonedHPTagUpdate,
    SummonedHit,
    // END_SUMMONED,
    // BEGIN_MOBPOOL,
    MobEnterField,
    MobLeaveField,
    MobChangeController,
    // BEGIN_MOB,
    MobMove,
    MobCtrlAck,
    MobCtrlHint,
    MobStatSet,
    MobStatReset,
    MobSuspendReset,
    MobAffected,
    MobDamaged,
    MobSpecialEffectBySkill,
    MobHPChange,
    MobCrcKeyChanged,
    MobHPIndicator,
    MobCatchEffect,
    MobEffectByItem,
    MobSpeaking,
    MobChargeCount,
    MobSkillDelay,
    MobRequestResultEscortInfo,
    MobEscortStopEndPermmision,
    MobEscortStopSay,
    MobEscortReturnBefore,
    MobNextAttack,
    MobTeleport,
    MobForcedAction,
    MobAttackedByMob,
    // END_MOB,
    END_MOBPOOL,
    // BEGIN_NPCPOOL,
    NpcEnterField,
    NpcLeaveField,
    NpcChangeController,
    // BEGIN_NPC,
    NpcMove,
    NpcUpdateLimitedInfo,
    NpcShowQuizScore,
    NpcShowQuizScoreAni,
    NpcSpecialAction,
    // END_NPC,
    // BEGIN_NPCTEMPLATE,
    NpcSetScript,
    // END_NPCTEMPLATE,
    END_NPCPOOL,
    // BEGIN_EMPLOYEEPOOL,
    EmployeeEnterField,
    EmployeeLeaveField,
    EmployeeMiniRoomBalloon,
    // END_EMPLOYEEPOOL,
    // BEGIN_DROPPOOL,
    DropEnterField,
    DropReleaseAllFreeze,
    DropLeaveField,
    // END_DROPPOOL,
    // BEGIN_MESSAGEBOXPOOL,
    CreateMessgaeBoxFailed,
    MessageBoxEnterField,
    MessageBoxLeaveField,
    // END_MESSAGEBOXPOOL,
    // BEGIN_AFFECTEDAREAPOOL,
    AffectedAreaCreated,
    AffectedAreaRemoved,
    // END_AFFECTEDAREAPOOL,
    // BEGIN_TOWNPORTALPOOL,
    TownPortalCreated,
    TownPortalRemoved,
    // END_TOWNPORTALPOOL,
    // BEGIN_OPENGATEPOOL,
    OpenGateCreated,
    OpenGateRemoved,
    // END_OPENGATEPOOL,
    // BEGIN_REACTORPOOL,
    ReactorChangeState,
    ReactorMove,
    ReactorEnterField,
    ReactorRemove,
    ReactorLeaveField,
    // END_REACTORPOOL,
    // BEGIN_ETCFIELDOBJ,
    SnowBallState,
    SnowBallHit,
    SnowBallMsg,
    SnowBallTouch,
    CoconutHit,
    CoconutScore,
    HealerMove,
    PulleyStateChange,
    MCarnivalEnter,
    MCarnivalPersonalCP,
    MCarnivalTeamCP,
    MCarnivalResultSuccess,
    MCarnivalResultFail,
    MCarnivalDeath,
    MCarnivalMemberOut,
    MCarnivalGameResult,
    ArenaScore,
    BattlefieldEnter,
    BattlefieldScore,
    BattlefieldTeamChanged,
    WitchtowerScore,
    HontaleTimer,
    ChaosZakumTimer,
    HontailTimer,
    ZakumTimer,
    PVPFieldEnter,
    PVPTeamChange,
    PVPModeChange,
    PVPStateChange,
    PVPUpdateCount,
    PVPModeResult,
    PVPUpdateTeamInfo,
    PVPUpdateRankInfo,
    PVPHPChanged,
    PVPTeamScore,
    PVPReviveMessage,
    PVPScreenEffect,
    PVPIceKnightHPChange,
    Unk_436,
    Unk_437,
    Unk_438,
    Unk_439,
    Unk_440,
    Unk_441,
    Unk_442,
    Unk_443,
    Unk_444,
    Unk_445,
    Unk_446,
    Unk_447,
    Unk_448,
    Unk_449,
    Unk_450,
    // END_ETCFIELDOBJ,
    // BEGIN_SCRIPT,
    ScriptMessage,
    // END_SCRIPT,
    // BEGIN_SHOP,
    OpenShopDlg,
    ShopResult,
    // END_SHOP,
    // BEGIN_ADMINSHOP,
    AdminShopResult,
    AdminShopCommodity,
    // END_ADMINSHOP,
    TrunkResult,
    // BEGIN_STOREBANK,
    StoreBankGetAllResult,
    StoreBankResult,
    // END_STOREBANK,
    RPSGame,
    Messenger,
    MiniRoom,
    // BEGIN_TOURNAMENT,
    Tournament,
    TournamentMatchTable,
    TournamentSetPrize,
    TournamentNoticeUEW,
    TournamentAvatarInfo,
    // END_TOURNAMENT,
    // BEGIN_WEDDING,
    WeddingProgress,
    WeddingCremonyEnd,
    // END_WEDDING,
    Parcel,
    // END_FIELD,
    // BEGIN_CASHSHOP,
    CashShopChargeParamResult,
    CashShopQueryCashResult,
    CashShopCashItemResult,
    CashShopPurchaseExpChanged,
    CashShopGiftMateInfoResult,
    CashShopCheckDuplicatedIDResult,
    CashShopCheckNameChangePossibleResult,
    CashShopRegisterNewCharacterResult,
    CashShopCheckTransferWorldPossibleResult,
    CashShopGachaponStampItemResult,
    CashShopCashItemGachaponResult,
    CashShopCashGachaponOpenResult,
    ChangeMaplePointResult,
    CashShopOneADay,
    CashShopNoticeFreeCashItem,
    CashShopMemberShopResult,
    // END_CASHSHOP,
    // BEGIN_FUNCKEYMAPPED,
    FuncKeyMappedInit,
    PetConsumeItemInit,
    PetConsumeMPItemInit,
    // END_FUNCKEYMAPPED,
    CheckSSN2OnCreateNewCharacterResult,
    CheckSPWOnCreateNewCharacterResult,
    FirstSSNOnCreateNewCharacterResult,
    Unk_492,
    BEGIN_MAPLETV,
    MapleTVUpdateMessage,
    MapleTVClearMessage,
    MapleTVSendMessageResult,
    BroadSetFlashChangeEvent,
    END_MAPLETV,
    // BEGIN_ITC,
    ITCChargeParamResult,
    ITCQueryCashResult,
    ITCNormalItemResult,
    // END_ITC,
    // BEGIN_CHARACTERSALE,
    CheckDuplicatedIDResultInCS,
    CreateNewCharacterResultInCS,
    CreateNewCharacterFailInCS,
    CharacterSale,
    // END_CHARACTERSALE,
    // BEGIN_GOLDHAMMER,
    GoldHammere_s,
    GoldHammerResult,
    GoldHammere_e,
    // END_GOLDHAMMER,
    // BEGIN_BATTLERECORD,
    BattleRecord_s,
    BattleRecordDotDamageInfo,
    BattleRecordRequestResult,
    BattleRecordAggroInfo,
    BattleRecord_e,
    // END_BATTLERECORD,
    // BEGIN_ITEMUPGRADE,
    ItemUpgrade_s,
    ItemUpgradeResult,
    ItemUpgradeFail,
    ItemUpgrade_e,
    // END_ITEMUPGRADE,
    // BEGIN_VEGA,
    Vega_s,
    VegaResult,
    VegaFail,
    Vega_e,
    // END_VEGA,
    LogoutGift,
    NO;


    private static final List<OutHeader> headers;
    private static final Set<OutHeader> ignoreHeaders = Set.of(
            CharacterInfo,
            PartyResult,
            SetField,
            SetCashShop,
            StatChanged,
            UserMove,
            PetActivated,
            PetMove,
            PetAction,
            DragonMove,
            SummonedMove,
            MobEnterField,
            MobLeaveField,
            MobChangeController,
            MobMove,
            MobCtrlAck,
            MobHPIndicator,
            NpcEnterField,
            NpcLeaveField,
            NpcChangeController,
            NpcMove,
            DropEnterField,
            DropLeaveField,
            ReactorEnterField,
            ReactorLeaveField,
            QuickslotMappedInit,
            FuncKeyMappedInit
    );

    static {
        final List<OutHeader> headerList = new ArrayList<>(Collections.nCopies(NO.getValue() + 1, null));
        for (OutHeader header : values()) {
            headerList.set(header.getValue(), header);
        }
        headers = Collections.unmodifiableList(headerList);
    }

    private final int value;

    OutHeader() {
        this.value = Counter.next++;
    }

    OutHeader(int value) {
        this.value = value;
        Counter.next = value + 1;
    }

    public final int getValue() {
        return value;
    }

    public final boolean isIgnoreHeader() {
        return ignoreHeaders.contains(this);
    }

    public static OutHeader getByValue(short op) {
        if (op >= 0 && op < NO.getValue()) {
            return headers.get(op);
        }
        return null;
    }

    private static class Counter {
        private static int next = 0;
    }
}
