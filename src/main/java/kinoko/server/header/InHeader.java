package kinoko.server.header;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public enum InHeader {
    BEGIN_SOCKET,
    CheckPassword,
    GuestIDLogin,
    AccountInfoRequest,
    WorldInfoRequest,
    SelectWorld,
    CheckUserLimit,
    ConfirmEULA,
    SetGender,
    CheckPinCode,
    UpdatePinCode,
    WorldRequest,
    LogoutWorld,
    ViewAllChar,
    SelectCharacterByVAC,
    VACFlagSet,
    CheckNameChangePossible,
    RegisterNewCharacter,
    CheckTransferWorldPossible,
    SelectCharacter,
    MigrateIn,
    CheckDuplicatedID,
    CreateNewCharacter,
    CreateNewCharacterInCS,
    CreateNewCharacter_PremiumAdventurer,
    DeleteCharacter,
    AliveAck,
    ExceptionLog,
    SecurityPacket,
    EnableSPWRequest,
    CheckSPWRequest,
    EnableSPWRequestByACV,
    CheckSPWRequestByACV,
    CheckOTPRequest,
    CheckDeleteCharacterOTP,
    CreateSecurityHandle,
    SSOErrorLog,
    ClientDumpLog,
    CheckExtraCharInfo,
    CreateNewCharacter_Ex,
    END_SOCKET,
    BEGIN_USER,
    UserTransferFieldRequest,
    UserTransferChannelRequest,
    UserMigrateToCashShopRequest,
    UserMove,
    UserSitRequest,
    UserPortableChairSitRequest,
    UserMeleeAttack,
    UserShootAttack,
    UserMagicAttack,
    UserBodyAttack,
    UserMovingShootAttackPrepare,
    UserHit,
    UserAttackUser,
    UserChat,
    UserADBoardClose,
    UserEmotion,
    UserActivateEffectItem,
    UserUpgradeTombEffect,
    UserHP,
    Premium,
    UserBanMapByMob,
    UserMonsterBookSetCover,
    UserSelectNpc,
    UserRemoteShopOpenRequest,
    UserScriptMessageAnswer,
    UserShopRequest,
    UserTrunkRequest,
    UserEntrustedShopRequest,
    UserStoreBankRequest,
    UserParcelRequest,
    UserEffectLocal,
    ShopScannerRequest,
    ShopLinkRequest,
    AdminShopRequest,
    UserGatherItemRequest,
    UserSortItemRequest,
    UserChangeSlotPositionRequest,
    Unk_79,
    UserStatChangeItemUseRequest,
    UserStatChangeItemCancelRequest,
    UserStatChangeByPortableChairRequest,
    UserMobSummonItemUseRequest,
    UserPetFoodItemUseRequest,
    UserTamingMobFoodItemUseRequest,
    UserScriptItemUseRequest,
    UserConsumeCashItemUseRequest,
    UserDestroyPetItemRequest,
    UserBridleItemUseRequest,
    UserSkillLearnItemUseRequest,
    UserSkillResetItemUseRequest,
    UserShopScannerItemUseRequest,
    UserMapTransferItemUseRequest,
    UserPortalScrollUseRequest,
    UserUpgradeItemUseRequest,
    UserHyperUpgradeItemUseRequest,
    UserItemOptionUpgradeItemUseRequest,
    UserUIOpenItemUseRequest,
    UserBagItemUserRequest,
    UserItemReleaseRequest,
    UserAbilityUpRequest,
    UserAbilityMassUpRequest,
    UserChangeStatRequest,
    UserChangeStatRequestByItemOption,
    UserSkillUpRequest,
    UserSkillUseRequest,
    UserSkillCancelRequest,
    UserSkillPrepareRequest,
    UserDropMoneyRequest,
    UserGivePopularityRequest,
    UserPartyRequest,
    UserCharacterInfoRequest,
    UserActivatePetRequest,
    UserTemporaryStatUpdateRequest,
    UserPortalScriptRequest,
    Unk_116,
    UserPortalTeleportRequest,
    UserMapTransferRequest,
    UserAntiMacroItemUseRequest,
    UserAntiMacroSkillUseRequest,
    UserAntiMacroQuestionResult,
    UserClaimRequest,
    UserQuestRequest,
    UserCalcDamageStatSetRequest,
    UserThrowGrenade,
    UserMacroSysDataModified,
    UserSelectNpcItemUseRequest,
    UserLotteryItemUseRequest,
    UserItemMakeRequest,
    UserSueCharacterRequest,
    UserUseGachaponBoxRequest,
    UserUseGachaponRemoteRequest,
    UserUseWaterOfLife,
    UserRepairDurabilityAll,
    UserRepairDurability,
    UserQuestRecordSetState,
    UserClientTimerEndRequest,
    UserFollowCharacterRequest,
    UserFollowCharacterWithdraw,
    UserSelectPQReward,
    UserRequestPQReward,
    SetPassenserResult,
    BroadcastMsg,
    GroupMessage,
    Whisper,
    CoupleMessage,
    Messenger,
    MiniRoom,
    PartyRequest,
    PartyResult,
    ExpeditionRequest,
    PartyAdverRequest,
    GuildRequest,
    GuildResult,
    Admin,
    Log,
    FriendRequest,
    MemoRequest,
    MemoFlagRequest,
    EnterTownPortalRequest,
    EnterOpenGateRequest,
    SlideRequest,
    FuncKeyMappedModified,
    RPSGame,
    MarriageRequest,
    WeddingWishListRequest,
    WeddingProgress,
    GuestBless,
    BoobyTrapAlert,
    StalkBegin,
    AllianceRequest,
    AllianceResult,
    FamilyChartRequest,
    FamilyInfoRequest,
    FamilyRegisterJunior,
    FamilyUnregisterJunior,
    FamilyUnregisterParent,
    FamilyJoinResult,
    FamilyUsePrivilege,
    FamilySetPrecept,
    FamilySummonResult,
    ChatBlockUserReq,
    GuildBBS,
    UserMigrateToITCRequest,
    UserExpUpItemUseRequest,
    UserTempExpUseRequest,
    NewYearCardRequest,
    RandomMorphRequest,
    CashItemGachaponRequest,
    CashGachaponOpenRequest,
    ChangeMaplePointRequest,
    TalkToTutor,
    RequestIncCombo,
    MobCrcKeyChangedReply,
    Unk_196,
    RequestSessionValue,
    UpdateGMBoard,
    AccountMoreInfo,
    FindFriend,
    AcceptAPSPEvent,
    UserDragonBallBoxRequest,
    UserDragonBallSummonRequest,
    BEGIN_PET,
    PetMove,
    PetAction,
    PetInteractionRequest,
    PetDropPickUpRequest,
    PetStatChangeItemUseRequest,
    PetUpdateExceptionListRequest,
    END_PET,
    BEGIN_SUMMONED,
    SummonedMove,
    SummonedAttack,
    SummonedHit,
    SummonedSkill,
    SummonedRemove, // LP_Remove
    END_SUMMONED,
    BEGIN_DRAGON,
    DragonMove,
    END_DRAGON,
    QuickslotKeyMappedModified,
    PassiveskillInfoUpdate,
    UpdateScreenSetting,
    UserAttackUser_Specific,
    UserPamsSongUseRequest,
    QuestGuideRequest,
    UserRepeatEffectRemove,
    END_USER,
    BEGIN_FIELD,
    BEGIN_LIFEPOOL,
    BEGIN_MOB,
    MobMove,
    MobApplyCtrl,
    MobDropPickUpRequest,
    MobHitByObstacle,
    MobHitByMob,
    MobSelfDestruct,
    MobAttackMob,
    MobSkillDelayEnd,
    MobTimeBombEnd,
    MobEscortCollision,
    MobRequestEscortInfo,
    MobEscortStopEndRequest,
    END_MOB,
    BEGIN_NPC,
    NpcMove,
    NpcSpecialAction,
    END_NPC,
    END_LIFEPOOL,
    BEGIN_DROPPOOL,
    DropPickUpRequest,
    END_DROPPOOL,
    BEGIN_REACTORPOOL,
    ReactorHit,
    ReactorTouch,
    RequireFieldObstacleStatus,
    END_REACTORPOOL,
    BEGIN_EVENT_FIELD,
    EventStart,
    SnowBallHit,
    SnowBallTouch,
    CoconutHit,
    TournamentMatchTable,
    PulleyHit,
    END_EVENT_FIELD,
    BEGIN_MONSTER_CARNIVAL_FIELD,
    MCarnivalRequest,
    END_MONSTER_CARNIVAL_FIELD,
    CONTISTATE,
    BEGIN_PARTY_MATCH,
    INVITE_PARTY_MATCH,
    CANCEL_INVITE_PARTY_MATCH,
    END_PARTY_MATCH,
    RequestFootHoldInfo,
    FootHoldInfo,
    GatherRequest,
    GatherEndNotice,
    END_FIELD,
    BEGIN_CASHSHOP,
    CashShopChargeParamRequest,
    CashShopQueryCashRequest,
    CashShopCashItemRequest,
    CashShopCheckCouponRequest,
    CashShopGiftMateInfoRequest,
    Unk_285,
    END_CASHSHOP,
    CheckSSN2OnCreateNewCharacter,
    CheckSPWOnCreateNewCharacter,
    FirstSSNOnCreateNewCharacter,
    BEGIN_RAISE,
    RaiseRefesh,
    RaiseUIState,
    RaiseIncExp,
    RaiseAddPiece,
    END_RAISE,
    SendMateMail,
    RequestGuildBoardAuthKey,
    RequestConsultAuthKey,
    RequestClassCompetitionAuthKey,
    RequestWebBoardAuthKey,
    BEGIN_ITEMUPGRADE,
    GoldHammerRequest,
    GoldHammerComplete,
    ItemUpgradeComplete,
    END_ITEMUPGRADE,
    BEGIN_BATTLERECORD,
    BATTLERECORD_ONOFF_REQUEST,
    END_BATTLERECORD,
    BEGIN_MAPLETV,
    MapleTVSendMessageRequest,
    MapleTVUpdateViewCount,
    END_MAPLETV,
    BEGIN_ITC,
    ITCChargeParamRequest,
    ITCQueryCashRequest,
    ITCItemRequest,
    END_ITC,
    BEGIN_CHARACTERSALE,
    CheckDuplicatedIDInCS,
    END_CHARACTERSALE,
    LogoutGiftSelect,
    NO;


    private static final List<InHeader> headers;
    private static final Set<InHeader> ignoreHeaders = Set.of(
            CreateSecurityHandle,
            UpdateScreenSetting,
            FuncKeyMappedModified,
            QuickslotKeyMappedModified,
            UserMove,
            UserEmotion,
            UserChangeStatRequest,
            RequestIncCombo,
            PetMove,
            PetAction,
            DragonMove,
            SummonedMove,
            MobMove,
            MobApplyCtrl,
            NpcMove,
            CANCEL_INVITE_PARTY_MATCH
    );

    static {
        final List<InHeader> headerList = new ArrayList<>(Collections.nCopies(NO.getValue() + 1, null));
        for (InHeader header : values()) {
            headerList.set(header.getValue(), header);
        }
        headers = Collections.unmodifiableList(headerList);
    }

    private final int value;

    InHeader() {
        this.value = Counter.next++;
    }

    InHeader(int value) {
        this.value = value;
        Counter.next = value + 1;
    }

    public final int getValue() {
        return value;
    }

    public final boolean isIgnoreHeader() {
        return ignoreHeaders.contains(this);
    }

    public static InHeader getByValue(short op) {
        if (op >= 0 && op < NO.getValue()) {
            return headers.get(op);
        }
        return null;
    }

    private static class Counter {
        private static int next = 0;
    }
}
